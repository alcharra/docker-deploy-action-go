name: Go Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Run unit tests
        run: go test -tags=unit ./... -v

  e2e:
    name: E2E Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: 'stable'

      - name: Build deploy binary
        run: go build -o deploy-action ./main.go

      - name: Run E2E Deploy Test (compose)
        run: go test -tags=e2e ./tests -v
        env:
          MODE: compose
          SSH_HOST: ${{ secrets.TEST_SSH_HOST }}
          SSH_USER: ${{ secrets.TEST_SSH_USER }}
          SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
          REGISTRY_HOST: ${{ secrets.REGISTRY_HOST }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASS: ${{ secrets.REGISTRY_PASS }}
          DEPLOY_FILE: ./tests/compose/docker-compose.yml
          PROJECT_PATH: /home/${{ secrets.TEST_SSH_USER }}/test/compose
          EXTRA_FILES: ./tests/compose/.env
          DOCKER_NETWORK: test_network_compose
          DOCKER_NETWORK_DRIVER: bridge
    
      - name: Run E2E Deploy Test (stack)
        run: go test -tags=e2e ./tests -v
        env:
          MODE: stack
          SSH_HOST: ${{ secrets.TEST_SSH_HOST }}
          SSH_USER: ${{ secrets.TEST_SSH_USER }}
          SSH_KEY: ${{ secrets.TEST_SSH_KEY }}
          REGISTRY_HOST: ${{ secrets.REGISTRY_HOST }}
          REGISTRY_USER: ${{ secrets.REGISTRY_USER }}
          REGISTRY_PASS: ${{ secrets.REGISTRY_PASS }}
          DEPLOY_FILE: ./tests/stack/docker-stack.yml
          PROJECT_PATH: /home/${{ secrets.TEST_SSH_USER }}/test/stack
          EXTRA_FILES: ./tests/stack/redis.conf,./tests/stack/nginx.conf
          DOCKER_NETWORK: test_network_stack
          DOCKER_NETWORK_DRIVER: overlay
          STACK_NAME: test_stack
          ENV_VARS: |
            POSTGRES_DB=app_db
            POSTGRES_USER=user
            POSTGRES_PASSWORD=password
            WEB_PORT=8080