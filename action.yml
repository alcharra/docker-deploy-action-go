name: "Docker Deploy Action (Go)"
description: "Uploads Docker Compose/Stack files and deploys via SSH using a Go-based binary"
author: "alcharra"
branding:
  icon: "upload-cloud"
  color: "blue"

inputs:
  ssh_host:
    description: "The hostname or IP address of the remote server you're deploying to."
    required: true
  ssh_port:
    description: "The port used to connect via SSH."
    required: false
    default: "22"
  ssh_user:
    description: "The SSH username used to connect to the server."
    required: true
  ssh_key:
    description: "Your private SSH key for authenticating with the server."
    required: true
  ssh_key_passphrase:
    description: "(If applicable) The passphrase used to unlock the SSH key."
    required: false
  ssh_known_hosts:
    description: "The contents of your `known_hosts` file, used to verify the server's identity."
    required: false
  ssh_fingerprint:
    description: "The server's SSH fingerprint in SHA256 format (alternative to `known_hosts`)."
    required: false
  ssh_timeout:
    description: "SSH connection timeout duration (e.g. `10s`, `30s`, `1m`)."
    required: false
    default: "10s"
  project_path:
    description: "The full path on the server where files will be uploaded and deployed."
    required: true
  deploy_file:
    description: "The name of your main deployment file (e.g. `docker-compose.yml` or `docker-stack.yml`)."
    required: true
    default: "docker-compose.yml"
  extra_files:
    description: "A list of extra files or folders to upload. Use a multi-line format — one path per line."
    required: false
  mode:
    description: "Deployment method: either `compose` or `stack`."
    required: false
    default: "compose"
  stack_name:
    description: "Name of the Docker stack (required if using `stack` mode)."
    required: false
  compose_pull:
    description: "Pull the latest images before starting services (`true` or `false`)."
    required: false
    default: "true"
  compose_build:
    description: "Build images before starting services (`true` or `false`)."
    required: false
    default: "false"
  compose_no_deps:
    description: "Skip starting linked services (`true` or `false`)."
    required: false
    default: "false"
  compose_target_services:
    description: "A list of specific services to restart. Use a multi-line format — one service per line."
    required: false
  docker_network:
    description: "The name of the Docker network to use or create if missing."
    required: false
  docker_network_driver:
    description: "The network driver to use (`bridge`, `overlay`, etc.)."
    required: false
    default: "bridge"
  docker_network_attachable:
    description: "Allow standalone containers to attach to the network (`true` or `false`)."
    required: false
    default: "false"
  docker_prune:
    description: "Type of Docker clean-up to run after deployment (e.g. `system`, `volumes`, `none`)."
    required: false
    default: "none"
  registry_host:
    description: "The container registry hostname (e.g. `ghcr.io`) if login is required."
    required: false
  registry_user:
    description: "Username for the registry."
    required: false
  registry_pass:
    description: "Password or token for the registry."
    required: false
  enable_rollback:
    description: "Automatically roll back if deployment fails (`true` or `false`)."
    required: false
    default: "false"
  env_vars:
    description: "Environment variables to include in a `.env` file uploaded to the server."
    required: false
  verbose:
    description: "Show extra internal command details and debug output (`true` or `false`)."
    required: false
    default: "false"
  
runs:
  using: "composite"
  steps:
    - name: Run Docker Deploy (Go)
      shell: bash
      run: ${{ github.action_path }}/entrypoint.sh
      env:
        GITHUB_ACTION_PATH: ${{ github.action_path }}
        RELEASE_VERSION: ${{ github.action_ref }}
        SSH_HOST: ${{ inputs.ssh_host }}
        SSH_PORT: ${{ inputs.ssh_port }}
        SSH_USER: ${{ inputs.ssh_user }}
        SSH_KEY: ${{ inputs.ssh_key }}
        SSH_KEY_PASSPHRASE: ${{ inputs.ssh_key_passphrase }}
        SSH_KNOWN_HOSTS: ${{ inputs.ssh_known_hosts }}
        SSH_FINGERPRINT: ${{ inputs.ssh_fingerprint }}
        SSH_TIMEOUT: ${{ inputs.ssh_timeout }}
        PROJECT_PATH: ${{ inputs.project_path }}
        DEPLOY_FILE: ${{ inputs.deploy_file }}
        EXTRA_FILES: ${{ inputs.extra_files }}
        DOCKER_PRUNE: ${{ inputs.docker_prune }}
        MODE: ${{ inputs.mode }}
        STACK_NAME: ${{ inputs.stack_name }}
        COMPOSE_PULL: ${{ inputs.compose_pull }}
        COMPOSE_BUILD: ${{ inputs.compose_build }}
        COMPOSE_NO_DEPS: ${{ inputs.compose_no_deps }}
        COMPOSE_TARGET_SERVICES: ${{ inputs.compose_target_services }}
        DOCKER_NETWORK: ${{ inputs.docker_network }}
        DOCKER_NETWORK_DRIVER: ${{ inputs.docker_network_driver }}
        DOCKER_NETWORK_ATTACHABLE: ${{ inputs.docker_network_attachable }}
        REGISTRY_HOST: ${{ inputs.registry_host }}
        REGISTRY_USER: ${{ inputs.registry_user }}
        REGISTRY_PASS: ${{ inputs.registry_pass }}
        ENABLE_ROLLBACK: ${{ inputs.enable_rollback }}
        ENV_VARS: ${{ inputs.env_vars }}
        VERBOSE: ${{ inputs.verbose }}