#!/usr/bin/env bash

set -o errexit
set -o nounset
set -o pipefail

echo "Starting deploy-action downloader..."

TEST_VERSION="${RELEASE_VERSION:-}"
echo "action_ref = ${TEST_VERSION}"

RELEASE_VERSION="${GITHUB_ACTION_PATH##*/}"

if [[ ! "$RELEASE_VERSION" =~ ^v[0-9]+(\.[0-9]+)*$ ]]; then
  echo "ERROR: Action must be used with a version tag like @v1.2.3 or @v1"
  echo "You used: @$RELEASE_VERSION"
  exit 1
fi

REPO="alcharra/docker-deploy-action-go"
GITHUB_ACTION_PATH="${GITHUB_ACTION_PATH%/}"

OS="$(uname -s | tr '[:upper:]' '[:lower:]')"
echo "Detected OS: $OS"

ARCH_RAW="$(uname -m)"
ARCH="$ARCH_RAW"
VARIANT=""

case "$ARCH_RAW" in
  x86_64 | amd64)
    ARCH="amd64"
    ;;
  i386 | i686)
    ARCH="386"
    ;;
  armv5* | armv5l)
    ARCH="arm"
    VARIANT="v5"
    ;;
  armv6* | armv6l)
    ARCH="arm"
    VARIANT="v6"
    ;;
  armv7* | armv7l | armhf)
    ARCH="arm"
    VARIANT="v7"
    ;;
  armv8* | aarch64)
    ARCH="arm64"
    ;;
  *)
    echo "ERROR: Unsupported architecture: $ARCH_RAW"
    exit 1
    ;;
esac

echo "Detected architecture: $ARCH_RAW resolved to $ARCH${VARIANT:+ ($VARIANT)}"

FILENAME="deploy-action_${OS}_${ARCH}"
[[ -n "$VARIANT" ]] && FILENAME="${FILENAME}${VARIANT}"
FILENAME="${FILENAME}_${RELEASE_VERSION}"
[[ "$OS" == "windows" ]] && FILENAME="${FILENAME}.exe"

URL="https://github.com/${REPO}/releases/download/${RELEASE_VERSION}/${FILENAME}"
TARGET="${GITHUB_ACTION_PATH}/${FILENAME}"

echo "Downloading binary: $FILENAME"
echo "From URL: $URL"
echo "To: $TARGET"

curl -fsSL --retry 5 --keepalive-time 2 "$URL" -o "$TARGET"
chmod +x "$TARGET"

echo "Executing binary..."
"$TARGET" "$@"

echo "Cleaning up..."
rm -f "$TARGET"